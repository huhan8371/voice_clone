name: macOS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp
        pip install -e .
    
    - name: Check code formatting
      run: |
        pip install black
        black . --check
    
    - name: Run linting
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check imports
      run: |
        pip install isort
        isort . --check-only --diff
    
    - name: Check package structure
      run: |
        python -c "from core import Config, VoiceCloningService, TTSService"

  build-app:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        pip install pyinstaller
    
    - name: Build macOS application
      run: |
        pyinstaller --name="VoiceClone" --onefile --add-data="core:core" voice_clone_test.py
    
    - name: Package application
      run: |
        cd dist
        zip -r VoiceClone-macOS.zip VoiceClone
    
    - name: Upload application
      uses: actions/upload-artifact@v2
      with:
        name: VoiceClone-macOS
        path: |
          dist/VoiceClone
          dist/VoiceClone-macOS.zip